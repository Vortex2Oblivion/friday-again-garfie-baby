function onInitOptions(options) {
    // 2nd button is usually Freeplay on the
    // default main menu, soooooooo
    options[1].callback = () -> {
        var bgScale = bg.scale.x;
		var bgTargetScale = FlxG.height / bg.frameHeight;
		var bgScroll = bg.scrollFactor.y;

		FlxTween.num(0.0, 1.0, 0.25, {ease: FlxEase.backOut}, (progress:Float) -> {
			progress /= 1.175;

			var scale = FlxMath.lerp(bgScale, bgTargetScale, progress);
			magenta.scale.x = magenta.scale.y = bg.scale.x = bg.scale.y = scale;

			var scroll = FlxMath.lerp(bgScroll, 0.0, progress);
			bg.scrollFactor.y = magenta.scrollFactor.y = scroll;
		});
        _bgFlicker();

        for(i => item in menuItems) {
            if(MainMenuState.curSelected == i) {
                FlxFlicker.flicker(item, 1.1, 0.06, false, false, (_) -> {
                    FlxTimer.wait(0.1, () -> {
                        persistentUpdate = false;

                        if(FlxG.keys.pressed.CONTROL)
                            FlxG.switchState(new FreeplayState()); // open new freeplay as a state
                        else if(FlxG.keys.pressed.SHIFT) {
                            vsliceExperience_skipNextRedirects.push(FreeplayState);
                            FlxG.switchState(new FreeplayState()); // open old freeplay
                        } else
                            openSubState(new ScriptedSubState("VSliceFreeplay", [FlxG.state])); // open new freeplay as a substate
    
                        FlxTimer.wait(0.5, () -> {
                            transitioning = false;
    
                            bg.scale.set(1.175, 1.175);
                            bg.scrollFactor.set(0, Math.max(0.1, 0.25 - (0.05 * (options.length - 4))));
    
                            magenta.scale.set(1.175, 1.175);
                            magenta.scrollFactor.set(bg.scrollFactor.x, bg.scrollFactor.y);
    
                            for(i => item in menuItems) {
                                item.alpha = 1;
                                item.visible = true;
                                item.revive();
                            }
                        });
                    });
                });
            }
            else {
                FlxTween.tween(item, {alpha: 0.0}, 0.25, {
                    ease: FlxEase.quadOut,
					onComplete: (_) -> {
                        item.kill();
					}
				});
            }
        }
        transitioning = true;
        FlxG.sound.play(Paths.sound("menus/sfx/select"));
    };
    options[1].fireImmediately = true;
}